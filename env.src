# JAVA_HOME for Linux / OS X and for Windows

export uname="$(uname | tr '[:upper:]' '[:lower:]')"
[ -n "$(echo $uname | grep cygwin)" ] && uname=cygwin
echo Operating system is $uname.

if [ -z "$JAVA_HOME" ]; then
    if [ -f /usr/libexec/java_home ]; then
        # Mac OS X has this
        export JAVA_HOME="$(/usr/libexec/java_home)"
    else
        if [ "$uname" == linux ]; then
            export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
        elif [ "$uname" == darwin ]; then
            export JAVA_HOME=/Library/Java/JavaVirtualMachines/Current.jdk/Contents/Home
        elif [ "$uname" == cygwin ]; then
            # Windows / Cygwin
            [ -z "$JAVA_HOME" ] && echo ERROR: Please set JAVA_HOME in Control Panel
        else
            echo Warning: unrecognised operating system $uname.
        fi
    fi
fi

echo JAVA_HOME is $JAVA_HOME.

export SPA_2016=$HOME/SPA_2016

# Hadoop configuration
export HADOOP_PREFIX=$SPA_2016/hadoop
export HADOOP_CONF_DIR="$HADOOP_PREFIX/etc/hadoop"
export HADOOP_HOME="$HADOOP_PREFIX"
export HADOOP_COMMON_HOME="$HADOOP_PREFIX"
export HADOOP_HDFS_HOME="$HADOOP_PREFIX"
export HADOOP_YARN_HOME="$HADOOP_PREFIX"
# export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib"

# Spark configuration
export SPARK_HOME=$SPA_2016/spark

# Hive configuration
export HIVE_HOME=$SPA_2016/hive

# set CLASSPATH for Cygwin
if [ "$uname" == cygwin ]; then
    if [ -f $HADOOP_PREFIX/bin/hadoop ]; then
        export PATH="$HADOOP_PREFIX/bin:$HADOOP_PREFIX/sbin:$PATH"
        export HADOOP_CLASSPATH="$($HADOOP_PREFIX/bin/hadoop classpath)"
        export CLASSPATH="$($HADOOP_PREFIX/bin/hadoop classpath)"
        HADOOP_CLASSPATH is $HADOOP_CLASSPATH
    else
        echo Not setting Hadoop classpath as Hadoop not yet installed
    fi
fi

